C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 1   


C51 COMPILER V6.20c, COMPILATION OF MODULE KB
OBJECT MODULE PLACED IN kb.OBJ
COMPILER INVOKED BY: C:\Program Files (x86)\Keil\C51\BIN\C51.EXE kb.c DEBUG OBJECTEXTEND CODE LISTINCLUDE SYMBOLS

stmt level    source

   1          /***********
   2          \project    MPOR - AT89 kit
   3          \author 	xdavid10
   4          \filename	.h
   5          \contacts	Bc. Daniel DAVIDEK	<danieldavidek@gmail.com>
   6          \date		17-04-2014
   7          \brief      Drivers and demos on kit with AT89
   8              MCU: AT89C51ED2
   9              fMCU: 11.059MHz
  10          \license    LGPL License Terms \ref lgpl_license
  11          ***********/
  12          /* DOCSTYLE: gr4viton_2014_A <goo.gl/1deDBa> */
  13          
  14          
  15          //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  16          // INCLUDES
  17          //_________> project includes
  18          #include "kb.h"
   1      =1  /***********
   2      =1  \project    MPOR - AT89 kit
   3      =1  \author 	xdavid10
   4      =1  \filename	.h
   5      =1  \contacts	Bc. Daniel DAVIDEK	<danieldavidek@gmail.com>
   6      =1  \date		17-04-2014
   7      =1  \brief      Drivers and demos on kit with AT89
   8      =1      MCU: AT89C51ED2
   9      =1      fMCU: 11.059MHz
  10      =1  \license    LGPL License Terms \ref lgpl_license
  11      =1  ***********/
  12      =1  /* DOCSTYLE: gr4viton_2014_A <goo.gl/1deDBa> */
  13      =1  
  14      =1  #ifndef _KB_H_
  15      =1  #define _KB_H_
  16      =1  
  17      =1  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  18      =1  // INCLUDES
  19      =1  //_________> system includes
  20      =1  //_________> project includes
  21      =1  //_________> local includes
  22      =1  //_________> forward includes
  23      =1  #include "defines.h"
   1      =2  /***********
   2      =2  \project    MPOR - AT89 kit
   3      =2  \author 	xdavid10
   4      =2  \filename	.h
   5      =2  \contacts	Bc. Daniel DAVIDEK	<danieldavidek@gmail.com>
   6      =2  \date		17-04-2014
   7      =2  \brief      Drivers and demos on kit with AT89
   8      =2      MCU: AT89C51ED2
   9      =2      fMCU: 11.059MHz
  10      =2  \license    LGPL License Terms \ref lgpl_license
  11      =2  ***********/
  12      =2  /* DOCSTYLE: gr4viton_2014_A <goo.gl/1deDBa> */
  13      =2  
  14      =2  #ifndef _DEFINES_H_
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 2   

  15      =2  #define _DEFINES_H_
  16      =2  
  17      =2  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  18      =2  // INCLUDES
  19      =2  //_________> system includes
  20      =2  //_________> project includes
  21      =2  //_________> local includes
  22      =2  //_________> forward includes
  23      =2  
  24      =2  #include <intrins.h>
   1      =3  /*--------------------------------------------------------------------------
   2      =3  INTRINS.H
   3      =3  
   4      =3  Intrinsic functions for C51.
   5      =3  Copyright (c) 1988-2001 Keil Elektronik GmbH and Keil Software, Inc.
   6      =3  All rights reserved.
   7      =3  --------------------------------------------------------------------------*/
   8      =3  
   9      =3  extern void          _nop_     (void);
  10      =3  extern bit           _testbit_ (bit);
  11      =3  extern unsigned char _cror_    (unsigned char, unsigned char);
  12      =3  extern unsigned int  _iror_    (unsigned int,  unsigned char);
  13      =3  extern unsigned long _lror_    (unsigned long, unsigned char);
  14      =3  extern unsigned char _crol_    (unsigned char, unsigned char);
  15      =3  extern unsigned int  _irol_    (unsigned int,  unsigned char);
  16      =3  extern unsigned long _lrol_    (unsigned long, unsigned char);
  17      =3  extern unsigned char _chkfloat_(float);
  25      =2  #include <stdio.h>
   1      =3  /*--------------------------------------------------------------------------
   2      =3  STDIO.H
   3      =3  
   4      =3  Prototypes for standard I/O functions.
   5      =3  Copyright (c) 1988-2001 Keil Elektronik GmbH and Keil Software, Inc.
   6      =3  All rights reserved.
   7      =3  --------------------------------------------------------------------------*/
   8      =3  
   9      =3  #ifndef EOF
  10      =3   #define EOF -1
  11      =3  #endif
  12      =3  
  13      =3  #ifndef NULL
  14      =3   #define NULL ((void *) 0)
  15      =3  #endif
  16      =3  
  17      =3  #ifndef _SIZE_T
  18      =3   #define _SIZE_T
  19      =3   typedef unsigned int size_t;
  20      =3  #endif
  21      =3  
  22      =3  #pragma SAVE
  23      =3  #pragma REGPARMS
  24      =3  extern char _getkey (void);
  25      =3  extern char getchar (void);
  26      =3  extern char ungetchar (char);
  27      =3  extern char putchar (char);
  28      =3  extern int printf   (const char *, ...);
  29      =3  extern int sprintf  (char *, const char *, ...);
  30      =3  extern int vprintf  (const char *, char *);
  31      =3  extern int vsprintf (char *, const char *, char *);
  32      =3  extern char *gets (char *, int n);
  33      =3  extern int scanf (const char *, ...);
  34      =3  extern int sscanf (char *, const char *, ...);
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 3   

  35      =3  extern int puts (const char *);
  36      =3  
  37      =3  #pragma RESTORE
  26      =2  #include <89c51rd2.H>
   1      =3  /*-------------------------------------------------------------------------
   2      =3  R89c51rd2.H
   3      =3  
   4      =3  Header file for AtmelWM T89C51RD2
   5      =3    
   6      =3  Copyright (c) 1988-1999 Keil Elektronik GmbH and Keil Software, Inc.
   7      =3  All rights reserved.
   8      =3  -------------------------------------------------------------------------*/
   9      =3  sfr  P0      =   0x80;			 
  10      =3  
  11      =3  sbit  P0_7    =   P0^7;
  12      =3  sbit  P0_6    =   P0^6;
  13      =3  sbit  P0_5    =   P0^5;
  14      =3  sbit  P0_4    =   P0^4;
  15      =3  sbit  P0_3    =   P0^3;
  16      =3  sbit  P0_2    =   P0^2;
  17      =3  sbit  P0_1    =   P0^1;
  18      =3  sbit  P0_0    =   P0^0;
  19      =3  
  20      =3  sfr  SP      =   0x81;
  21      =3  sfr  DPL     =   0x82;
  22      =3  sfr  DPH     =   0x83;
  23      =3  
  24      =3  sfr  PCON    =   0x87;			 
  25      =3  
  26      =3  sfr  TCON    =   0x88;             
  27      =3  
  28      =3  sbit  TF1    =   TCON^7;
  29      =3  sbit  TR1    =   TCON^6;
  30      =3  sbit  TF0    =   TCON^5;
  31      =3  sbit  TR0    =   TCON^4;
  32      =3  sbit  IE1_   =   TCON^3;
  33      =3  sbit  IT1    =   TCON^2;
  34      =3  sbit  IE0_   =   TCON^1;
  35      =3  sbit  IT0    =   TCON^0;
  36      =3  
  37      =3  sfr  TMOD    =   0x89;			 
  38      =3  
  39      =3  sfr  TL0     =   0x8A;			 
  40      =3  
  41      =3  sfr  TL1     =   0x8B;			 
  42      =3  
  43      =3  sfr  TH0     =   0x8C;			 
  44      =3  
  45      =3  sfr  TH1     =   0x8D;			 
  46      =3  
  47      =3  sfr  CKCON      =   0x8F;			 
  48      =3  
  49      =3  
  50      =3  sfr  P1      =   0x90;			 
  51      =3  
  52      =3  sbit  P1_7    =   P1^7;
  53      =3  sbit  P1_6    =   P1^6;
  54      =3  sbit  P1_5    =   P1^5;
  55      =3  sbit  P1_4    =   P1^4;
  56      =3  sbit  P1_3    =   P1^3;
  57      =3  sbit  P1_2    =   P1^2;
  58      =3  sbit  P1_1    =   P1^1;
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 4   

  59      =3  sbit  P1_0    =   P1^0;
  60      =3  
  61      =3  sbit  CEX4    =   P1^7;
  62      =3  sbit  CEX3    =   P1^6;
  63      =3  sbit  CEX2    =   P1^5;
  64      =3  sbit  CEX1    =   P1^4;
  65      =3  sbit  CEX0    =   P1^3;
  66      =3  sbit  ECI     =   P1^2;
  67      =3  sbit  T2EX    =   P1^1;
  68      =3  sbit  T2      =   P1^0;
  69      =3  
  70      =3  sfr  SCON    =   0x98;			 
  71      =3  
  72      =3  sfr  SCON_1    =   0xC0;			 
  73      =3  
  74      =3  sbit  SM0    =   SCON^7;
  75      =3  sbit  FE     =   SCON^7;
  76      =3  sbit  SM1    =   SCON^6;
  77      =3  sbit  SM2    =   SCON^5;
  78      =3  sbit  REN    =   SCON^4;
  79      =3  sbit  TB8    =   SCON^3;
  80      =3  sbit  RB8    =   SCON^2;
  81      =3  sbit  TI     =   SCON^1;
  82      =3  sbit  RI     =   SCON^0;
  83      =3  
  84      =3  sfr  SBUF    =   0x99;			 
  85      =3  
  86      =3  sfr  SBUF_1  =   0xC1;             
  87      =3  
  88      =3  sfr  BRL  =     0x9A;                
  89      =3  
  90      =3  sfr  P2      =   0xA0;			 
  91      =3  
  92      =3  sbit  P2_7    =   P2^7;
  93      =3  sbit  P2_6    =   P2^6;
  94      =3  sbit  P2_5    =   P2^5;
  95      =3  sbit  P2_4    =   P2^4;
  96      =3  sbit  P2_3    =   P2^3;
  97      =3  sbit  P2_2    =   P2^2;
  98      =3  sbit  P2_1    =   P2^1;
  99      =3  sbit  P2_0    =   P2^0;
 100      =3  
 101      =3  sfr  WDTRST  =   0xA6;			 
 102      =3  sfr  WDTPRG  =   0xA7;			 
 103      =3  
 104      =3  sfr  AUXR1  =   0xA2;              
 105      =3  
 106      =3  sfr  IE     =   0xA8;			     
 107      =3  sfr  IE0    =   0xA8;
 108      =3  
 109      =3  sbit  EA     =   IE^7;
 110      =3  sbit  EC     =   IE^6;
 111      =3  sbit  ET2    =   IE^5;
 112      =3  sbit  ES     =   IE^4;
 113      =3  sbit  ET1    =   IE^3;
 114      =3  sbit  EX1    =   IE^2;
 115      =3  sbit  ET0    =   IE^1;
 116      =3  sbit  EX0    =   IE^0;
 117      =3  
 118      =3  sfr  SADDR   =   0xA9;			 
 119      =3  
 120      =3  
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 5   

 121      =3  sfr  SADDR_1   =   0xAA;			 
 122      =3  
 123      =3  sfr  P3      =   0xB0;			 
 124      =3  
 125      =3  sbit  P3_7    =   P3^7;
 126      =3  sbit  P3_6    =   P3^6;
 127      =3  sbit  P3_5    =   P3^5;
 128      =3  sbit  P3_4    =   P3^4;
 129      =3  sbit  P3_3    =   P3^3;
 130      =3  sbit  P3_2    =   P3^2;
 131      =3  sbit  P3_1    =   P3^1;
 132      =3  sbit  P3_0    =   P3^0;
 133      =3  
 134      =3  sbit  RD      =   P3^7;
 135      =3  sbit  WR      =   P3^6;
 136      =3  sbit  T1      =   P3^5;
 137      =3  sbit  T0      =   P3^4;
 138      =3  sbit  INT1    =   P3^3;
 139      =3  sbit  INT0    =   P3^2;
 140      =3  sbit  TXD     =   P3^1;
 141      =3  sbit  RXD     =   P3^0;
 142      =3  
 143      =3  
 144      =3  sfr  AUXR    =   0x8E; 			 
 145      =3  
 146      =3  sfr  SADEN   =   0xB9;			 
 147      =3  
 148      =3  sfr  SADEN_1 =   0xBA;			  
 149      =3  
 150      =3  sfr  IPH     =   0xB7;			     
 151      =3  sfr  IPH0    =   0xB7;
 152      =3  
 153      =3  sfr  IPL     =   0xB8;			     
 154      =3  sfr  IPL0    =   0xB8;	
 155      =3  
 156      =3  sbit PPC  = IPL^6;
 157      =3  sbit PT2  = IPL^5;
 158      =3  sbit PS   = IPL^4;
 159      =3  sbit PT1  = IPL^3;
 160      =3  sbit PX1  = IPL^2;
 161      =3  sbit PT0  = IPL^1;
 162      =3  sbit PX0  = IPL^0;
 163      =3  
 164      =3  sfr  T2CON   =   0xC8;             
 165      =3  
 166      =3  sbit  TF2    =   T2CON^7;
 167      =3  sbit  EXF2   =   T2CON^6;
 168      =3  sbit  RCLK   =   T2CON^5;
 169      =3  sbit  TCLK   =   T2CON^4;
 170      =3  sbit  EXEN2  =   T2CON^3;
 171      =3  sbit  TR2    =   T2CON^2;
 172      =3  sbit  CT2    =   T2CON^1;
 173      =3  sbit  CPRL2  =   T2CON^0;
 174      =3  
 175      =3  sfr  T2MOD   =   0xC9;			 
 176      =3  
 177      =3  sfr  RCAP2L  =   0xCA;			 
 178      =3  sfr  RCAP2H  =   0xCB;			 
 179      =3  sfr  TL2     =   0xCC;			 
 180      =3  sfr  TH2     =   0xCD;			 
 181      =3  
 182      =3  sfr  BDRCON  =   0x9B;			 
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 6   

 183      =3  
 184      =3  sfr  BDRCON_1  =   0x9C;			 
 185      =3  
 186      =3  
 187      =3  sfr  PSW     =   0xD0;			 
 188      =3  sbit  CY     =   PSW^7;
 189      =3  sbit  AC     =   PSW^6;
 190      =3  sbit  F0     =   PSW^5;
 191      =3  sbit  RS1    =   PSW^4;
 192      =3  sbit  RS0    =   PSW^3;
 193      =3  sbit  OV     =   PSW^2;
 194      =3  sbit  UD     =   PSW^1;
 195      =3  sbit  P      =   PSW^0;
 196      =3  
 197      =3  sfr  CCON    =   0xD8;			 
 198      =3  
 199      =3  sbit  CF      =   CCON^7;
 200      =3  sbit  CR      =   CCON^6;
 201      =3  sbit  CCF4    =   CCON^4;
 202      =3  sbit  CCF3    =   CCON^3;
 203      =3  sbit  CCF2    =   CCON^2;
 204      =3  sbit  CCF1    =   CCON^1;
 205      =3  sbit  CCF0    =   CCON^0;
 206      =3  
 207      =3  sfr  CMOD    =   0xD9;			 
 208      =3  
 209      =3  sfr  CCAPM0  =   0xDA;			 
 210      =3  sfr  CCAPM1  =   0xDB;			 
 211      =3  sfr  CCAPM2  =   0xDC;			 
 212      =3  sfr  CCAPM3  =   0xDD;			 
 213      =3  sfr  CCAPM4  =   0xDE;			 
 214      =3  
 215      =3  sfr  CL      =   0xE9;			 
 216      =3  
 217      =3  sfr  CCAP0L  =   0xEA;			 
 218      =3  
 219      =3  sfr  CCAP1L  =   0xEB;			 
 220      =3  
 221      =3  sfr  CCAP2L  =   0xEC;			 
 222      =3  
 223      =3  sfr  CCAP3L  =   0xED;			 
 224      =3  
 225      =3  sfr  CCAP4L  =   0xEE;			 
 226      =3  
 227      =3  sfr  ACC     =   0xE0;			 
 228      =3  sfr  B       =   0xF0;			 
 229      =3  
 230      =3  sfr  CH      =   0xF9;			 
 231      =3  
 232      =3  sfr  CCAP0H  =   0xFA;			 
 233      =3  sfr  CCAP1H  =   0xFB;			  
 234      =3  sfr  CCAP2H  =   0xFC;			 
 235      =3  sfr  CCAP3H  =   0xFD;			 
 236      =3  sfr  CCAP4H  =   0xFE;			 
 237      =3  
 238      =3  sfr  ICON  =   0xFF;               
 239      =3  sfr  CKSEL  =   0x85;               
 240      =3  sfr  OSCCON  =   0x86;               
 241      =3  
 242      =3  sfr FCON 	= 0xD1;
 243      =3  sfr EECON	= 0xD2;
 244      =3  sfr EETIM	= 0xD3;
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 7   

 245      =3  
 246      =3  
 247      =3  
 248      =3  
  27      =2  //#include <sys/types.h>
  28      =2  //#include <atmelWM\89C51RD2.h>
  29      =2  //#include "reg51.h"
  30      =2  
  31      =2  
  32      =2  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  33      =2  // MACRO DEFINITIONS
  34      =2  //____________________________________________________
  35      =2  //constants (user-defined)
  36      =2  //____________________________________________________
  37      =2  //constants (do not change)
  38      =2  #define INT_MAX 0xffff
  39      =2  #define B32_MAX 0x8000
  40      =2  //#define CYCLES_WHILE 0x0df
  41      =2  #define CYCLES_WHILE 0x001
  42      =2  
  43      =2  #define GET_MBYTE(BYTE,BIT) ((BYTE) & 1<<(BIT))
  44      =2  #define GET_BIT(BYTE,BIT) ( !(!( GET_MBYTE(BYTE,BIT) )) )
  45      =2  #define BIT(b) (1LU<<(b))
  46      =2  #define NBIT(b) (~(1LU<<(b)))
  47      =2  #define SET_BIT(BYTE,b) ( (BYTE) | (BIT(b)) )
  48      =2  #define CLR_BIT(BYTE,b) ( (BYTE) & (NBIT(b)) )
  49      =2  //#define SET_BIT(BYTE,BIT) (BYTE & LU1<<BIT)
  50      =2  
  51      =2  #define BT1 !(P3&(1<<2)); //p3b3=1<<3-1
  52      =2  #define BT2 !(P1&(1<<4)); //p1b5
  53      =2  #define BT3 !(P3&(1<<3)); //p3b4
  54      =2  
  55      =2  #define BT(num) \
  56      =2  ( switch (num) \
  57      =2    {             \
  58      =2      case 1:  return BT1;  \
  59      =2      case 2:  return BT2;  \
  60      =2      case 3:  return BT3;  \
  61      =2    }              \
  62      =2  )
  63      =2  
  64      =2  // number of bit in byte
  65      =2  // T2MOD
  66      =2  #define T2OE	1
  67      =2  #define DCEN	0
  68      =2  //____________________________________________________
  69      =2  // macro functions (do not use often!)
  70      =2  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  71      =2  // TYPE DEFINITIONS
  72      =2  typedef short int 	int8_t ;
  73      =2  typedef int 		int16_t ;
  74      =2  typedef long int 	int32_t ;
  75      =2  
  76      =2  typedef unsigned short int 	uint8_t ;
  77      =2  typedef unsigned int		uint16_t ;
  78      =2  typedef unsigned long int 	uint32_t ;
  79      =2  
  80      =2  typedef unsigned short int 	FILE ;
  81      =2  
  82      =2  //typedef unsigned int size_t;
  83      =2  typedef signed int ssize_t;
  84      =2  typedef long off_t;
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 8   

  85      =2  //____________________________________________________
  86      =2  #define __NOT_IMPLEMENTED_YET 	0
  87      =2  #define __NOT_USED_ANYMORE		0
  88      =2  
  89      =2  #define GPIO0	1<<0
  90      =2  #define GPIO1	1<<1
  91      =2  #define GPIO2	1<<2
  92      =2  #define GPIO3	1<<3
  93      =2  #define GPIO4	1<<4
  94      =2  #define GPIO5	1<<5
  95      =2  #define GPIO6	1<<6
  96      =2  #define GPIO7	1<<7
  97      =2  #define GPIO8	1<<8
  98      =2  #define GPIO9	1<<9
  99      =2  #define GPIO10	1<<10
 100      =2  #define GPIO11	1<<11
 101      =2  #define GPIO12	1<<12
 102      =2  #define GPIO13	1<<13
 103      =2  #define GPIO14	1<<14
 104      =2  
 105      =2  
 106      =2  #define UNUSED(var) (void)(var);
 107      =2  //____________________________________________________
 108      =2  // enumerations
 109      =2  //____________________________________________________
 110      =2  // structs
 111      =2  //____________________________________________________
 112      =2  // unions
 113      =2  
 114      =2  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 115      =2  // EXTERNAL VARIABLE DECLARATIONS
 116      =2  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 117      =2  // INLINE FUNCTION DEFINITIONS
 118      =2  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 119      =2  // STATIC FUNCTION DEFINITIONS
 120      =2  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 121      =2  // OTHER FUNCTION DECLARATIONS
 122      =2      //____________________________________________________
 123      =2      // ..
 124      =2  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 125      =2  // EXTERNAL REFERENCES
 126      =2  
 127      =2  
 128      =2  
 129      =2  #endif
  24      =1  #include "waitin.h"
   1      =2  /***********
   2      =2  \project    MPOR - AT89 kit
   3      =2  \author 	xdavid10
   4      =2  \filename	.h
   5      =2  \contacts	Bc. Daniel DAVIDEK	<danieldavidek@gmail.com>
   6      =2  \date		17-04-2014
   7      =2  \brief      Drivers and demos on kit with AT89
   8      =2      MCU: AT89C51ED2
   9      =2      fMCU: 11.059MHz
  10      =2  \license    LGPL License Terms \ref lgpl_license
  11      =2  ***********/
  12      =2  /* DOCSTYLE: gr4viton_2014_A <goo.gl/1deDBa> */
  13      =2  
  14      =2  #ifndef _WAITIN_H_
  15      =2  #define _WAITIN_H_
  16      =2  
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 9   

  17      =2  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  18      =2  // INCLUDES
  19      =2  //_________> system includes
  20      =2  //_________> project includes
  21      =2  //_________> local includes
  22      =2  //_________> forward includes
  23      =2  
  24      =2  #include "defines.h"
   1      =3  /***********
   2      =3  \project    MPOR - AT89 kit
   3      =3  \author 	xdavid10
   4      =3  \filename	.h
   5      =3  \contacts	Bc. Daniel DAVIDEK	<danieldavidek@gmail.com>
   6      =3  \date		17-04-2014
   7      =3  \brief      Drivers and demos on kit with AT89
   8      =3      MCU: AT89C51ED2
   9      =3      fMCU: 11.059MHz
  10      =3  \license    LGPL License Terms \ref lgpl_license
  11      =3  ***********/
  12      =3  /* DOCSTYLE: gr4viton_2014_A <goo.gl/1deDBa> */
  13      =3  
  14      =3  #ifndef _DEFINES_H_
           =3 #define _DEFINES_H_
           =3 
           =3 //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
           =3 // INCLUDES
           =3 //_________> system includes
           =3 //_________> project includes
           =3 //_________> local includes
           =3 //_________> forward includes
           =3 
           =3 #include <intrins.h>
           =3 #include <stdio.h>
           =3 #include <89c51rd2.H>
           =3 //#include <sys/types.h>
           =3 //#include <atmelWM\89C51RD2.h>
           =3 //#include "reg51.h"
           =3 
           =3 
           =3 //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
           =3 // MACRO DEFINITIONS
           =3 //____________________________________________________
           =3 //constants (user-defined)
           =3 //____________________________________________________
           =3 //constants (do not change)
           =3 #define INT_MAX 0xffff
           =3 #define B32_MAX 0x8000
           =3 //#define CYCLES_WHILE 0x0df
           =3 #define CYCLES_WHILE 0x001
           =3 
           =3 #define GET_MBYTE(BYTE,BIT) ((BYTE) & 1<<(BIT))
           =3 #define GET_BIT(BYTE,BIT) ( !(!( GET_MBYTE(BYTE,BIT) )) )
           =3 #define BIT(b) (1LU<<(b))
           =3 #define NBIT(b) (~(1LU<<(b)))
           =3 #define SET_BIT(BYTE,b) ( (BYTE) | (BIT(b)) )
           =3 #define CLR_BIT(BYTE,b) ( (BYTE) & (NBIT(b)) )
           =3 //#define SET_BIT(BYTE,BIT) (BYTE & LU1<<BIT)
           =3 
           =3 #define BT1 !(P3&(1<<2)); //p3b3=1<<3-1
           =3 #define BT2 !(P1&(1<<4)); //p1b5
           =3 #define BT3 !(P3&(1<<3)); //p3b4
           =3 
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 10  

           =3 #define BT(num) \
           =3 ( switch (num) \
           =3   {             \
           =3     case 1:  return BT1;  \
           =3     case 2:  return BT2;  \
           =3     case 3:  return BT3;  \
           =3   }              \
           =3 )
           =3 
           =3 // number of bit in byte
           =3 // T2MOD
           =3 #define T2OE	1
           =3 #define DCEN	0
           =3 //____________________________________________________
           =3 // macro functions (do not use often!)
           =3 //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
           =3 // TYPE DEFINITIONS
           =3 typedef short int 	int8_t ;
           =3 typedef int 		int16_t ;
           =3 typedef long int 	int32_t ;
           =3 
           =3 typedef unsigned short int 	uint8_t ;
           =3 typedef unsigned int		uint16_t ;
           =3 typedef unsigned long int 	uint32_t ;
           =3 
           =3 typedef unsigned short int 	FILE ;
           =3 
           =3 //typedef unsigned int size_t;
           =3 typedef signed int ssize_t;
           =3 typedef long off_t;
           =3 //____________________________________________________
           =3 #define __NOT_IMPLEMENTED_YET 	0
           =3 #define __NOT_USED_ANYMORE		0
           =3 
           =3 #define GPIO0	1<<0
           =3 #define GPIO1	1<<1
           =3 #define GPIO2	1<<2
           =3 #define GPIO3	1<<3
           =3 #define GPIO4	1<<4
           =3 #define GPIO5	1<<5
           =3 #define GPIO6	1<<6
           =3 #define GPIO7	1<<7
           =3 #define GPIO8	1<<8
           =3 #define GPIO9	1<<9
           =3 #define GPIO10	1<<10
           =3 #define GPIO11	1<<11
           =3 #define GPIO12	1<<12
           =3 #define GPIO13	1<<13
           =3 #define GPIO14	1<<14
           =3 
           =3 
           =3 #define UNUSED(var) (void)(var);
           =3 //____________________________________________________
           =3 // enumerations
           =3 //____________________________________________________
           =3 // structs
           =3 //____________________________________________________
           =3 // unions
           =3 
           =3 //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
           =3 // EXTERNAL VARIABLE DECLARATIONS
           =3 //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 11  

           =3 // INLINE FUNCTION DEFINITIONS
           =3 //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
           =3 // STATIC FUNCTION DEFINITIONS
           =3 //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
           =3 // OTHER FUNCTION DECLARATIONS
           =3     //____________________________________________________
           =3     // ..
           =3 //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
           =3 // EXTERNAL REFERENCES
           =3 
           =3 
           =3 
           =3 #endif
  25      =2  
  26      =2  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  27      =2  // MACRO DEFINITIONS
  28      =2  //____________________________________________________
  29      =2  //constants (user-defined)
  30      =2  //____________________________________________________
  31      =2  //constants (do not change)
  32      =2  //____________________________________________________
  33      =2  // macro functions (do not use often!)
  34      =2  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  35      =2  // TYPE DEFINITIONS
  36      =2  //____________________________________________________
  37      =2  // enumerations
  38      =2  //____________________________________________________
  39      =2  // structs
  40      =2  //____________________________________________________
  41      =2  // unions
  42      =2  
  43      =2  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  44      =2  // EXTERNAL VARIABLE DECLARATIONS
  45      =2  extern volatile uint32_t tic_toc_start;
  46      =2  
  47      =2  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  48      =2  // INLINE FUNCTION DEFINITIONS
  49      =2  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  50      =2  // STATIC FUNCTION DEFINITIONS
  51      =2  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  52      =2  // OTHER FUNCTION DECLARATIONS
  53      =2      //____________________________________________________
  54      =2      // ..
  55      =2  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  56      =2  // EXTERNAL REFERENCES
  57      =2  /****************
  58      =2   \brief
  59      =2   \param
  60      =2   \retval
  61      =2   ****************/
  62      =2  void INIT_clk(void);
  63      =2  
  64      =2  /****************
  65      =2   \brief
  66      =2   \param
  67      =2   \retval
  68      =2   ****************/
  69      =2  void mswait(uint32_t delay);
  70      =2  
  71      =2  /****************
  72      =2   \brief Stores systick stamp to global variable (MATLAB alike)
  73      =2   \retval also returns the stamp
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 12  

  74      =2   ****************/
  75      =2  uint32_t _tic(void);
  76      =2  
  77      =2  /****************
  78      =2   \brief Count ticks of systick from the last call of _tic
  79      =2   \retval interval between _tic and _toc in systick units
  80      =2   ****************/
  81      =2  uint32_t _toc(void);
  82      =2  
  83      =2  /****************
  84      =2   \brief Count ticks of systick from the start time stamp
  85      =2   \param start time stamp
  86      =2   \retval interval between start time stamp and _tocFrom in systick units
  87      =2   ****************/
  88      =2  uint32_t _tocFrom(uint32_t start);
  89      =2  
  90      =2  
  91      =2  
  92      =2  
  93      =2  
  94      =2  void wwwait(int w);
  95      =2  void mwait(int cycles);
  96      =2  
  97      =2  void twait(uint16_t times);
  98      =2  void swait(int cycles);
  99      =2  
 100      =2  void INIT_T0m1();
 101      =2  void pause(unsigned int doba);
 102      =2  void pause10(unsigned int doba);
 103      =2  
 104      =2  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 105      =2  // EXTERNAL REFERENCES
 106      =2  
 107      =2  #endif
  25      =1  
  26      =1  #define nRows 4
  27      =1  #define nCols 4
  28      =1  #define nButtons 4
  29      =1  
  30      =1  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  31      =1  // MACRO DEFINITIONS
  32      =1  //____________________________________________________
  33      =1  //constants (user-defined)
  34      =1  //____________________________________________________
  35      =1  //constants (do not change)
  36      =1  //____________________________________________________
  37      =1  // macro functions (do not use often!)
  38      =1  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  39      =1  // TYPE DEFINITIONS
  40      =1  //____________________________________________________
  41      =1  // enumerations
  42      =1  //____________________________________________________
  43      =1  // structs
  44      =1  //____________________________________________________
  45      =1  // unions
  46      =1  
  47      =1  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  48      =1  // EXTERNAL VARIABLE DECLARATIONS
  49      =1  
  50      =1  extern unsigned char xdata kbCW;
  51      =1  extern unsigned char xdata kbRow;
  52      =1  extern unsigned char xdata kbCol;
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 13  

  53      =1  
  54      =1  extern uint8_t xdata key[nRows][nCols];
  55      =1  extern uint8_t xdata btn[nButtons];
  56      =1  
  57      =1  extern char xdata keyChar[nRows][nCols];
  58      =1  
  59      =1  extern char xdata btnChar[nButtons];
  60      =1  
  61      =1  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  62      =1  // INLINE FUNCTION DEFINITIONS
  63      =1  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  64      =1  // STATIC FUNCTION DEFINITIONS
  65      =1  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  66      =1  // OTHER FUNCTION DECLARATIONS
  67      =1      //____________________________________________________
  68      =1      // ..
  69      =1  
  70      =1  void KB_scanPressedKeys(void);
  71      =1  void KB_scanPressedBtns(void);
  72      =1  void KB_printPressedKeys(void);
  73      =1  void KB_printPressedBtns(void);
  74      =1  
  75      =1  void INIT_kb();
  76      =1  
  77      =1  
  78      =1  //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  79      =1  // EXTERNAL REFERENCES
  80      =1  
  81      =1  #endif
  19          
  20          //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  21          // TYPE DEFINITIONS
  22          //____________________________________________________
  23          // enumerations
  24          //____________________________________________________
  25          // structs
  26          //____________________________________________________
  27          // unions
  28          //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  29          // VARIABLE DEFINITIONS
  30          
  31          unsigned char xdata kbCW _at_ 0x8003;
  32          unsigned char xdata kbRow _at_ 0x8002;
  33          unsigned char xdata kbCol _at_ 0x8000;
  34          
  35          uint8_t xdata key[nRows][nCols];
  36          uint8_t xdata btn[nButtons];
  37          
  38          char xdata keyChar[nRows][nCols] = {
  39          	{'1','2','3','A' },
  40          	{'4','5','6','B' },
  41          	{'7','8','9','C' },
  42          	{'*','0','#','D' }
  43          };
  44          
  45          char xdata btnChar[nButtons] = {'y','b','r','g' };
  46          
  47          //____________________________________________________
  48          // static variables
  49          //____________________________________________________
  50          // other variables
  51          //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 14  

  52          // EXTERNAL VARIABLE DECLARATIONS
  53          //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  54          // STATIC FUNCTION DECLARATIONS
  55          //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  56          // STATIC FUNCTION DEFINITIONS - doxygen description should be in HEADERFILE
  57          //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  58          // INLINE FUNCTION DEFINITIONS - doxygen description should be in HEADERFILE
  59          //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  60          // OTHER FUNCTION DEFINITIONS - doxygen description should be in HEADERFILE
  61              //____________________________________________________
  62          void INIT_kb()
  63          {
  64   1      /*
  65   1      	CW  0x8003
  66   1      	radek 0x8002  - tlacitka + ledky
  67   1      	sloupec 0x8000
  68   1      	0x90 do CW
  69   1      	*/
  70   1      	kbCW = 0x90; // naknfigurovat na PORT A abych k tomu mohl pristupovat
  71   1      
  72   1      }
  73          
  74          void KB_scanPressedKeys(void)
  75          {
  76   1      	uint8_t r=0;
  77   1      	uint8_t c=0;
  78   1      	// detect matrix keyboard keys
  79   1      	for(r=0; r<nRows; r++)
  80   1      	{
  81   2      		kbRow = ~(1<<r);
  82   2      		pause10(1); // wait for the bus to stabilize
  83   2      		for(c=0;c<nRows;c++)
  84   2      		{
  85   3      			if(~kbCol & (1<<c))
  86   3      			{
  87   4      				key[r][c] = 1;
  88   4      			}
  89   3      			else
  90   3      				key[r][c] = 0;
  91   3      		}
  92   2      	}
  93   1      }
  94          
  95          void KB_scanPressedBtns(void)
  96          {
  97   1      	uint8_t r=0;
  98   1      	// detect 4 buttons on the left
  99   1      	for(r=0; r<nButtons; r++)
 100   1      	{
 101   2      		kbRow = ~(1<<(r+4));
 102   2      		pause10(1); // wait for the bus to stabilize
 103   2      		if(~kbCol & (1<<(r+4)))
 104   2      		{
 105   3      			btn[r] = 1;
 106   3      		}
 107   2      		else
 108   2      			btn[r] = 0;
 109   2      		}
 110   1      }
 111          
 112          
 113          void KB_printPressedKeys(void)
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 15  

 114          {
 115   1      	uint8_t r=0;
 116   1      	uint8_t c=0;
 117   1      	// print keyboard character
 118   1      	for(r=0; r<nRows; r++)
 119   1      		for(c=0;c<nRows;c++)
 120   1      			if(key[r][c])
 121   1      				printf("%c", keyChar[r][c]);
 122   1      }
 123          
 124          void KB_printPressedBtns(void)
 125          {
 126   1      	uint8_t r=0;
 127   1      	// print button character
 128   1      	for(r=0; r<nButtons; r++)
 129   1      		if(btn[r])
 130   1      			printf("%c", btnChar[r]);
 131   1      }
 132          
 133          //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 134          // EXTERNAL REFERENCES
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 16  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION INIT_kb (BEGIN)
                                           ; SOURCE LINE # 62
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 70
0000 908003            MOV     DPTR,#kbCW
0003 7490              MOV     A,#090H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 72
0006 22                RET     
             ; FUNCTION INIT_kb (END)

             ; FUNCTION KB_scanPressedKeys (BEGIN)
                                           ; SOURCE LINE # 74
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
0000 E4                CLR     A
0001 F500        R     MOV     r,A
0003 F500        R     MOV     r+01H,A
                                           ; SOURCE LINE # 77
;---- Variable 'c' assigned to Register 'R4/R5' ----
0005 FD                MOV     R5,A
0006 FC                MOV     R4,A
                                           ; SOURCE LINE # 79
0007 F500        R     MOV     r,A
0009 F500        R     MOV     r+01H,A
000B         ?C0002:
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 81
000B AF00        R     MOV     R7,r+01H
000D 7401              MOV     A,#01H
000F A807              MOV     R0,AR7
0011 08                INC     R0
0012 8002              SJMP    ?C0031
0014         ?C0030:
0014 C3                CLR     C
0015 33                RLC     A
0016         ?C0031:
0016 D8FC              DJNZ    R0,?C0030
0018 F4                CPL     A
0019 908002            MOV     DPTR,#kbRow
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 82
001D 7F01              MOV     R7,#01H
001F 7E00              MOV     R6,#00H
0021 120000      E     LCALL   _pause10
                                           ; SOURCE LINE # 83
0024 E4                CLR     A
0025 FC                MOV     R4,A
0026 FD                MOV     R5,A
0027         ?C0005:
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
0027 AF05              MOV     R7,AR5
0029 7401              MOV     A,#01H
002B 7E00              MOV     R6,#00H
002D A807              MOV     R0,AR7
002F 08                INC     R0
0030 8005              SJMP    ?C0033
0032         ?C0032:
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 17  

0032 C3                CLR     C
0033 33                RLC     A
0034 CE                XCH     A,R6
0035 33                RLC     A
0036 CE                XCH     A,R6
0037         ?C0033:
0037 D8F9              DJNZ    R0,?C0032
0039 FF                MOV     R7,A
003A 908000            MOV     DPTR,#kbCol
003D E0                MOVX    A,@DPTR
003E F4                CPL     A
003F FB                MOV     R3,A
0040 E4                CLR     A
0041 F4                CPL     A
0042 5E                ANL     A,R6
0043 FE                MOV     R6,A
0044 EF                MOV     A,R7
0045 5B                ANL     A,R3
0046 4E                ORL     A,R6
0047 602E              JZ      ?C0008
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 87
0049 ED                MOV     A,R5
004A 25E0              ADD     A,ACC
004C FB                MOV     R3,A
004D EC                MOV     A,R4
004E 33                RLC     A
004F FA                MOV     R2,A
0050 E500        R     MOV     A,r+01H
0052 AE00        R     MOV     R6,r
0054 7803              MOV     R0,#03H
0056         ?C0034:
0056 C3                CLR     C
0057 33                RLC     A
0058 CE                XCH     A,R6
0059 33                RLC     A
005A CE                XCH     A,R6
005B D8F9              DJNZ    R0,?C0034
005D 2400        R     ADD     A,#LOW key
005F F582              MOV     DPL,A
0061 7400        R     MOV     A,#HIGH key
0063 3E                ADDC    A,R6
0064 F583              MOV     DPH,A
0066 E582              MOV     A,DPL
0068 2B                ADD     A,R3
0069 F582              MOV     DPL,A
006B E583              MOV     A,DPH
006D 3A                ADDC    A,R2
006E F583              MOV     DPH,A
0070 E4                CLR     A
0071 F0                MOVX    @DPTR,A
0072 A3                INC     DPTR
0073 04                INC     A
0074 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 88
0075 802B              SJMP    ?C0007
0077         ?C0008:
                                           ; SOURCE LINE # 90
0077 ED                MOV     A,R5
0078 25E0              ADD     A,ACC
007A FB                MOV     R3,A
007B EC                MOV     A,R4
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 18  

007C 33                RLC     A
007D FA                MOV     R2,A
007E E500        R     MOV     A,r+01H
0080 AE00        R     MOV     R6,r
0082 7803              MOV     R0,#03H
0084         ?C0035:
0084 C3                CLR     C
0085 33                RLC     A
0086 CE                XCH     A,R6
0087 33                RLC     A
0088 CE                XCH     A,R6
0089 D8F9              DJNZ    R0,?C0035
008B 2400        R     ADD     A,#LOW key
008D F582              MOV     DPL,A
008F 7400        R     MOV     A,#HIGH key
0091 3E                ADDC    A,R6
0092 F583              MOV     DPH,A
0094 E582              MOV     A,DPL
0096 2B                ADD     A,R3
0097 F582              MOV     DPL,A
0099 E583              MOV     A,DPH
009B 3A                ADDC    A,R2
009C F583              MOV     DPH,A
009E E4                CLR     A
009F F0                MOVX    @DPTR,A
00A0 A3                INC     DPTR
00A1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 91
00A2         ?C0007:
00A2 0D                INC     R5
00A3 BD0001            CJNE    R5,#00H,?C0036
00A6 0C                INC     R4
00A7         ?C0036:
00A7 ED                MOV     A,R5
00A8 6404              XRL     A,#04H
00AA 4C                ORL     A,R4
00AB 6003              JZ      $ + 5H
00AD 020000      R     LJMP    ?C0005
                                           ; SOURCE LINE # 92
00B0         ?C0004:
00B0 0500        R     INC     r+01H
00B2 E500        R     MOV     A,r+01H
00B4 7002              JNZ     ?C0037
00B6 0500        R     INC     r
00B8         ?C0037:
00B8 C3                CLR     C
00B9 9404              SUBB    A,#04H
00BB E500        R     MOV     A,r
00BD 9400              SUBB    A,#00H
00BF 5003              JNC     $ + 5H
00C1 020000      R     LJMP    ?C0002
                                           ; SOURCE LINE # 93
00C4         ?C0010:
00C4 22                RET     
             ; FUNCTION KB_scanPressedKeys (END)

             ; FUNCTION KB_scanPressedBtns (BEGIN)
                                           ; SOURCE LINE # 95
                                           ; SOURCE LINE # 96
                                           ; SOURCE LINE # 97
0000 E4                CLR     A
0001 F500        R     MOV     r,A
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 19  

0003 F500        R     MOV     r+01H,A
                                           ; SOURCE LINE # 99
0005 F500        R     MOV     r,A
0007 F500        R     MOV     r+01H,A
0009         ?C0011:
                                           ; SOURCE LINE # 100
                                           ; SOURCE LINE # 101
0009 E500        R     MOV     A,r+01H
000B 2404              ADD     A,#04H
000D FF                MOV     R7,A
000E 7401              MOV     A,#01H
0010 A807              MOV     R0,AR7
0012 08                INC     R0
0013 8002              SJMP    ?C0039
0015         ?C0038:
0015 C3                CLR     C
0016 33                RLC     A
0017         ?C0039:
0017 D8FC              DJNZ    R0,?C0038
0019 F4                CPL     A
001A 908002            MOV     DPTR,#kbRow
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 102
001E 7F01              MOV     R7,#01H
0020 7E00              MOV     R6,#00H
0022 120000      E     LCALL   _pause10
                                           ; SOURCE LINE # 103
0025 E500        R     MOV     A,r+01H
0027 2404              ADD     A,#04H
0029 FF                MOV     R7,A
002A 7401              MOV     A,#01H
002C 7E00              MOV     R6,#00H
002E A807              MOV     R0,AR7
0030 08                INC     R0
0031 8005              SJMP    ?C0041
0033         ?C0040:
0033 C3                CLR     C
0034 33                RLC     A
0035 CE                XCH     A,R6
0036 33                RLC     A
0037 CE                XCH     A,R6
0038         ?C0041:
0038 D8F9              DJNZ    R0,?C0040
003A FF                MOV     R7,A
003B 908000            MOV     DPTR,#kbCol
003E E0                MOVX    A,@DPTR
003F F4                CPL     A
0040 FD                MOV     R5,A
0041 E4                CLR     A
0042 F4                CPL     A
0043 5E                ANL     A,R6
0044 FE                MOV     R6,A
0045 EF                MOV     A,R7
0046 5D                ANL     A,R5
0047 4E                ORL     A,R6
0048 601A              JZ      ?C0014
                                           ; SOURCE LINE # 104
                                           ; SOURCE LINE # 105
004A E500        R     MOV     A,r+01H
004C 25E0              ADD     A,ACC
004E FF                MOV     R7,A
004F E500        R     MOV     A,r
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 20  

0051 33                RLC     A
0052 FE                MOV     R6,A
0053 7400        R     MOV     A,#LOW btn
0055 2F                ADD     A,R7
0056 F582              MOV     DPL,A
0058 7400        R     MOV     A,#HIGH btn
005A 3E                ADDC    A,R6
005B F583              MOV     DPH,A
005D E4                CLR     A
005E F0                MOVX    @DPTR,A
005F A3                INC     DPTR
0060 04                INC     A
0061 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 106
0062 8017              SJMP    ?C0013
0064         ?C0014:
                                           ; SOURCE LINE # 108
0064 E500        R     MOV     A,r+01H
0066 25E0              ADD     A,ACC
0068 FF                MOV     R7,A
0069 E500        R     MOV     A,r
006B 33                RLC     A
006C FE                MOV     R6,A
006D 7400        R     MOV     A,#LOW btn
006F 2F                ADD     A,R7
0070 F582              MOV     DPL,A
0072 7400        R     MOV     A,#HIGH btn
0074 3E                ADDC    A,R6
0075 F583              MOV     DPH,A
0077 E4                CLR     A
0078 F0                MOVX    @DPTR,A
0079 A3                INC     DPTR
007A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 109
007B         ?C0013:
007B 0500        R     INC     r+01H
007D E500        R     MOV     A,r+01H
007F 7002              JNZ     ?C0042
0081 0500        R     INC     r
0083         ?C0042:
0083 C3                CLR     C
0084 9404              SUBB    A,#04H
0086 E500        R     MOV     A,r
0088 9400              SUBB    A,#00H
008A 5003              JNC     $ + 5H
008C 020000      R     LJMP    ?C0011
                                           ; SOURCE LINE # 110
008F         ?C0016:
008F 22                RET     
             ; FUNCTION KB_scanPressedBtns (END)

             ; FUNCTION KB_printPressedKeys (BEGIN)
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 115
0000 E4                CLR     A
0001 F500        R     MOV     r,A
0003 F500        R     MOV     r+01H,A
                                           ; SOURCE LINE # 116
0005 F500        R     MOV     c,A
0007 F500        R     MOV     c+01H,A
                                           ; SOURCE LINE # 118
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 21  

0009 F500        R     MOV     r,A
000B F500        R     MOV     r+01H,A
000D         ?C0017:
                                           ; SOURCE LINE # 119
000D E4                CLR     A
000E F500        R     MOV     c,A
0010 F500        R     MOV     c+01H,A
0012         ?C0020:
                                           ; SOURCE LINE # 120
0012 E500        R     MOV     A,c+01H
0014 25E0              ADD     A,ACC
0016 FD                MOV     R5,A
0017 E500        R     MOV     A,c
0019 33                RLC     A
001A FC                MOV     R4,A
001B E500        R     MOV     A,r+01H
001D AE00        R     MOV     R6,r
001F 7803              MOV     R0,#03H
0021         ?C0043:
0021 C3                CLR     C
0022 33                RLC     A
0023 CE                XCH     A,R6
0024 33                RLC     A
0025 CE                XCH     A,R6
0026 D8F9              DJNZ    R0,?C0043
0028 2400        R     ADD     A,#LOW key
002A F582              MOV     DPL,A
002C 7400        R     MOV     A,#HIGH key
002E 3E                ADDC    A,R6
002F F583              MOV     DPH,A
0031 E582              MOV     A,DPL
0033 2D                ADD     A,R5
0034 F582              MOV     DPL,A
0036 E583              MOV     A,DPH
0038 3C                ADDC    A,R4
0039 F583              MOV     DPH,A
003B E0                MOVX    A,@DPTR
003C FE                MOV     R6,A
003D A3                INC     DPTR
003E E0                MOVX    A,@DPTR
003F 4E                ORL     A,R6
0040 6026              JZ      ?C0022
                                           ; SOURCE LINE # 121
0042 7BFF              MOV     R3,#0FFH
0044 7A00        R     MOV     R2,#HIGH ?SC_0
0046 7900        R     MOV     R1,#LOW ?SC_0
0048 E500        R     MOV     A,r+01H
004A 25E0              ADD     A,ACC
004C 25E0              ADD     A,ACC
004E 2400        R     ADD     A,#LOW keyChar
0050 F582              MOV     DPL,A
0052 E4                CLR     A
0053 3400        R     ADDC    A,#HIGH keyChar
0055 F583              MOV     DPH,A
0057 E582              MOV     A,DPL
0059 2500        R     ADD     A,c+01H
005B F582              MOV     DPL,A
005D E4                CLR     A
005E 3583              ADDC    A,DPH
0060 F583              MOV     DPH,A
0062 E0                MOVX    A,@DPTR
0063 F500        E     MOV     ?_printf?BYTE+03H,A
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 22  

0065 120000      E     LCALL   _printf
0068         ?C0022:
0068 0500        R     INC     c+01H
006A E500        R     MOV     A,c+01H
006C 7002              JNZ     ?C0044
006E 0500        R     INC     c
0070         ?C0044:
0070 C3                CLR     C
0071 9404              SUBB    A,#04H
0073 E500        R     MOV     A,c
0075 9400              SUBB    A,#00H
0077 4099              JC      ?C0020
0079         ?C0019:
0079 0500        R     INC     r+01H
007B E500        R     MOV     A,r+01H
007D 7002              JNZ     ?C0045
007F 0500        R     INC     r
0081         ?C0045:
0081 C3                CLR     C
0082 9404              SUBB    A,#04H
0084 E500        R     MOV     A,r
0086 9400              SUBB    A,#00H
0088 4083              JC      ?C0017
                                           ; SOURCE LINE # 122
008A         ?C0024:
008A 22                RET     
             ; FUNCTION KB_printPressedKeys (END)

             ; FUNCTION KB_printPressedBtns (BEGIN)
                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 125
                                           ; SOURCE LINE # 126
0000 E4                CLR     A
0001 F500        R     MOV     r,A
0003 F500        R     MOV     r+01H,A
                                           ; SOURCE LINE # 128
0005 F500        R     MOV     r,A
0007 F500        R     MOV     r+01H,A
0009         ?C0025:
                                           ; SOURCE LINE # 129
0009 E500        R     MOV     A,r+01H
000B 25E0              ADD     A,ACC
000D FF                MOV     R7,A
000E E500        R     MOV     A,r
0010 33                RLC     A
0011 FE                MOV     R6,A
0012 7400        R     MOV     A,#LOW btn
0014 2F                ADD     A,R7
0015 F582              MOV     DPL,A
0017 7400        R     MOV     A,#HIGH btn
0019 3E                ADDC    A,R6
001A F583              MOV     DPH,A
001C E0                MOVX    A,@DPTR
001D FE                MOV     R6,A
001E A3                INC     DPTR
001F E0                MOVX    A,@DPTR
0020 4E                ORL     A,R6
0021 6017              JZ      ?C0027
                                           ; SOURCE LINE # 130
0023 7BFF              MOV     R3,#0FFH
0025 7A00        R     MOV     R2,#HIGH ?SC_0
0027 7900        R     MOV     R1,#LOW ?SC_0
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 23  

0029 7400        R     MOV     A,#LOW btnChar
002B 2500        R     ADD     A,r+01H
002D F582              MOV     DPL,A
002F E4                CLR     A
0030 3400        R     ADDC    A,#HIGH btnChar
0032 F583              MOV     DPH,A
0034 E0                MOVX    A,@DPTR
0035 F500        E     MOV     ?_printf?BYTE+03H,A
0037 120000      E     LCALL   _printf
003A         ?C0027:
003A 0500        R     INC     r+01H
003C E500        R     MOV     A,r+01H
003E 7002              JNZ     ?C0046
0040 0500        R     INC     r
0042         ?C0046:
0042 C3                CLR     C
0043 9404              SUBB    A,#04H
0045 E500        R     MOV     A,r
0047 9400              SUBB    A,#00H
0049 40BE              JC      ?C0025
                                           ; SOURCE LINE # 131
004B         ?C0029:
004B 22                RET     
             ; FUNCTION KB_printPressedBtns (END)

C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 24  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


uint16_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
CCF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DAH  1
CCF3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DBH  1
P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
CCF4 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DCH  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
ssize_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
int32_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
kbRow. . . . . . . . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   8002H  1
EC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AEH  1
int16_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
CF . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DFH  1
KB_scanPressedBtns . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  r. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_INT    0000H  2
FE . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
KB_scanPressedKeys . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  r. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_INT    0000H  2
  c. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0004H  2
P0_0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0080H  1
off_t. . . . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
CEX0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0093H  1
P1_0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
P0_1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0081H  1
P2_0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A0H  1
CEX1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0094H  1
P1_1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
P0_2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0082H  1
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
P3_0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
P2_1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A1H  1
CEX2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0095H  1
P1_2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0092H  1
P0_3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0083H  1
KB_printPressedBtns. . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  r. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_INT    0000H  2
P3_1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
P2_2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A2H  1
CEX3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0096H  1
P1_3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0093H  1
P0_4 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0084H  1
CR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DEH  1
P3_2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
P2_3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A3H  1
CEX4 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0097H  1
P1_4 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0094H  1
P0_5 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0085H  1
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
P3_3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 25  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P2_4 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A4H  1
P1_5 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0095H  1
P0_6 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0086H  1
P3_4 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
P2_5 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A5H  1
P1_6 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0096H  1
P0_7 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0087H  1
P3_5 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
P2_6 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A6H  1
P1_7 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0097H  1
KB_printPressedKeys. . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  r. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_INT    0000H  2
  c. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_INT    0002H  2
UD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D1H  1
P3_6 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
P2_7 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A7H  1
P3_7 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
IE0_ . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1_ . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
FILE . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
CCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D8H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
btn. . . . . . . . . . . . . . . . . .  PUBLIC   XDATA  ARRAY    0000H  8
btnChar. . . . . . . . . . . . . . . .  PUBLIC   XDATA  ARRAY    0008H  4
CT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
key. . . . . . . . . . . . . . . . . .  PUBLIC   XDATA  ARRAY    000CH  32
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
keyChar. . . . . . . . . . . . . . . .  PUBLIC   XDATA  ARRAY    002CH  16
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
uint8_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
ECI. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0092H  1
C51 COMPILER V6.20c  KB                                                                    04/22/2014 09:33:55 PAGE 26  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
int8_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
_pause10 . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
INIT_kb. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
PPC. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BEH  1
CPRL2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
IPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
kbCW . . . . . . . . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   8003H  1
kbCol. . . . . . . . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   8000H  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
_printf. . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
uint32_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
CCF0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D8H  1
CCF1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D9H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    563    ----
   CONSTANT SIZE    =      3    ----
   XDATA SIZE       =     60    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
